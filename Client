import java.io.*;
import java.net.*;

public class Client {

    Socket socket;
    BufferedReader br;
    PrintWriter out;

    public Client() {
        try {
            System.out.println("sending request to server:");
            socket = new Socket("127.0.0.1", 7777);
            System.out.println("connection done.");
            
            // (getInputStream & getOutputStream) are function and method
            br = new BufferedReader(new InputStreamReader(socket.getInputStream()));
            out = new PrintWriter(socket.getOutputStream());

            // calling function
            startReading();
            startWriting();

        } catch (Exception e) {
            e.printStackTrace();
        }
    }

    // creation of function 01
    public void startReading() {
        // thread for reading data 
        Runnable r1 = () -> {
            System.out.println("reader started...");

            try {
                while (true) {
                    String msg = br.readLine();
                    if (msg.equals("exit")) {
                        System.out.println("Server is no more available in the chat");

                        socket.close();
                        break;
                    }
                    System.out.println("Server : " + msg);
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        };

        // new thread class ka object banaya num ny
        new Thread(r1).start();
    }

    // creation of function 02
    public void startWriting() {
        // thread for writing data 
        Runnable r2 = () -> {
            System.out.println("writer has started");

            try {
                while (true) {

                    BufferedReader br1 = new BufferedReader(new InputStreamReader(System.in));
                    String content = br1.readLine();
                    
                    out.println(content);
                    out.flush();

                    if(content.equals("exit"))
                    {
                        socket.close();
                        break;
                    }
                }
            } catch (Exception e) {
                e.printStackTrace();
            }
        };

        // new thread class ka object banaya num ny
        new Thread(r2).start();
    }

    public static void main(String[] args) {
        System.out.println("this is client...");
        new Client();
    }
}
